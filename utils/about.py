import dash_bootstrap_components as dbc
import dash_core_components as dcc
import dash_html_components as html


def generate_about_tab():
    about_md = dcc.Markdown(
        '''
    
    [xGPhilosophy](https://twitter.com/xGPhilosophy) is a Twitter account that provides end-of-match xG summaries of major games across the football world, focusing mostly on the Premier League. For example, [see the recap tweet for the Liverpool vs. Man United 0-0 draw on Jan. 17, 2021](https://twitter.com/xGPhilosophy/status/1350871119784538114). The account started to make regular tweets around the beginning of 2020, and really picked up lots of attention in the summer of 2020.

    This app pulls in the actual number of favorites (likes) and retweets that every xGPhilosphy end-of-match tweet has received. Models have been trained and used to make predictions for these numbers, providing "expected favorites" and "expected predictions". The data and predictions are plotted in the __"Data & Predictions"__ tab (duh).

    Taking the difference between the actual counts and the models' predictions gives us an "over/under expected" number quantifying how unexpected a given tweet's amount of engagement is. For example, a tweet that is predicted to receive 100 favorites and 10 retweets, but actually receives 200 favorites and 30 retweets tells us that the tweet received more attention than one might expect. This may tell us that the game was particularly interesting, perhaps due to something like a controversial, late-game VAR decision. For football fans, this is not so unlike comparing a strikers goals scored with their xG---a goals scored number greater than xG can be a sign of skill (or luck), telling us something about the nature of the player.

    For those interested in why a prediction is a certain number, the __"Prediction Explanation"__ tab is your friend. A positive [SHAP](https://proceedings.neurips.cc/paper/2017/hash/8a20a8621978632d76c43dfd28b67767-Abstract.html) value indicates that a given feature (e.g. goals scored by the home team) contributed to making the prediction greater than the average prediction across all tweets, and visa versa for a negative SHAP value.

    The __"Leaderboard"__ tab lists tweets in order of an "Engagement Over Expected" metric that scores tweets based on the predicted and actual number of favorites and retweets. Unfortunately, it's not a simple as

    _Engagement over Expected = (Actual Favorites - Predicted Favorites) + (Actual Retweets - Predicted Retweets)_

    for two reasons.

    1. We must account for the fact that the xGPhilosophy account has gained lots of followers over time. If we did not account for this, then more recent tweets would always show up among the top.

    2. Tweets tend to get a lot more favorites than retweets, so taking the sum of the two to quantify engagement would be over-weighting favorites.

    Nonetheless, despite the above formula being flawed, it should provide a solid heuristic for the rankings generated by the actual methodology (not explained here).
    ```
    '''
    )

    return dbc.Tab(
        label='About',
        tab_id='about',
        # children=[html.Div(about_md)]
        children=[html.Div(about_md)]
    )